<?php

/**
 * @file
 * Main module file.
 */

use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Field\BaseFieldDefinition;
use Drupal\drd\Entity\BaseInterface;

/**
 * Implements hook_entity_base_field_info().
 *
 * {@inheritdoc}
 */
function drd_pi_entity_base_field_info(EntityTypeInterface $entity_type) {
  $fields = [];

  switch ($entity_type->id()) {
    /* @noinspection PhpMissingBreakStatementInspection */
    case 'drd_domain':
      $fields['pi_id_domain'] = BaseFieldDefinition::create('string')
        ->setLabel(t('Platform Domain ID'))
        ->setDescription(t('The ID of the Domain entity on the integrated platform.'))
        ->setSettings([
          'max_length' => 255,
          'text_processing' => 0,
        ])
        ->setDefaultValue('')
        ->setReadOnly(TRUE);

      /* @noinspection PhpMissingBreakStatementInspection */
    case 'drd_core':
      $fields['pi_id_core'] = BaseFieldDefinition::create('string')
        ->setLabel(t('Platform Core ID'))
        ->setDescription(t('The ID of the Core entity on the integrated platform.'))
        ->setSettings([
          'max_length' => 255,
          'text_processing' => 0,
        ])
        ->setDefaultValue('')
        ->setReadOnly(TRUE);

    case 'drd_host':
      $fields['pi_type'] = BaseFieldDefinition::create('string')
        ->setLabel(t('Platform Type'))
        ->setDescription(t('The type of the integrated platform.'))
        ->setSettings([
          'max_length' => 255,
          'text_processing' => 0,
        ])
        ->setDefaultValue('')
        ->setReadOnly(TRUE);
      $fields['pi_account'] = BaseFieldDefinition::create('string')
        ->setLabel(t('Platform Account'))
        ->setDescription(t('The account on the integrated platform.'))
        ->setSettings([
          'max_length' => 255,
          'text_processing' => 0,
        ])
        ->setDefaultValue('')
        ->setReadOnly(TRUE);
      $fields['pi_id_host'] = BaseFieldDefinition::create('string')
        ->setLabel(t('Platform Host ID'))
        ->setDescription(t('The ID of the Host entity on the integrated platform.'))
        ->setSettings([
          'max_length' => 255,
          'text_processing' => 0,
        ])
        ->setDefaultValue('')
        ->setReadOnly(TRUE);

  }

  return $fields;
}

/**
 * Get value of a drd_pi field from a DRD entity.
 *
 * @param \Drupal\drd\Entity\BaseInterface $entity
 *   The DRD entity.
 * @param string $type
 *   The field type.
 *
 * @return string
 *   The value.
 */
function drd_pi_get_entity_value(BaseInterface $entity, $type) {
  return $entity->get('pi_id_' . $type)->get(0)->getValue()['value'];
}
